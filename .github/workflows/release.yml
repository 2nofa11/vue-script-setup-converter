name: Release and Publish

on:
  push:
    branches: [main]
    paths:
      - 'package.json'

jobs:
  release:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'chore(release)') ||
      contains(join(github.event.commits.*.message, ' '), 'chore(release)')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run prepack

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version exists on npm
          if npm view vue-script-setup-converter@$CURRENT_VERSION > /dev/null 2>&1; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.version-exists == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.version-exists == 'false'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current-version }}
          release_name: Release v${{ steps.version-check.outputs.current-version }}
          body: |
            See [CHANGELOG.md](./CHANGELOG.md) for details.
          draft: false
          prerelease: false